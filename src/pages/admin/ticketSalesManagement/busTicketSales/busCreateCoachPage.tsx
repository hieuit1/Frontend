import React, { useEffect, useState } from "react";
import { Form, Input, Button, Upload, message, Select, Modal } from "antd";
import { UploadFile } from "antd";
import { fetchCoachById, createCoach } from "../../../../api/busCoachApi"; 

const { Option } = Select;

const BusCreateCoachPage = () => {
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);
  const [busId, setBusId] = useState<number | null>(null);
  const [fileList, setFileList] = useState<UploadFile[]>([]);
  const [modalVisible, setModalVisible] = useState(false);
  const [modalMessage, setModalMessage] = useState("");

  useEffect(() => {
    const fetchId = async () => {
      try {
        const coachData = await fetchCoachById(1); // üîπ Gi·∫£ s·ª≠ ID xe kh√°ch l√† 1
        if (!coachData || !coachData.coachId) {
          message.error("Kh√¥ng th·ªÉ l·∫•y ID xe bu√Ωt, d·ªØ li·ªáu kh√¥ng h·ª£p l·ªá!");
          return;
        }
        setBusId(coachData.coachId);
      } catch (error) {
        message.error("Kh√¥ng th·ªÉ l·∫•y ID xe kh√°ch");
      }
    };
    fetchId();
  }, []);

const onFinish = async (values: any) => {
  console.log("üöÄ B·∫Øt ƒë·∫ßu g·ª≠i request ƒë·∫øn API!");

  setLoading(true);
  const formData = new FormData();
  formData.append("coachName", values.busName); // ‚úÖ ƒê√∫ng v·ªõi request Postman
  formData.append("licensePlateNumberCoach", values.licensePlate);

  if (fileList.length > 0 && fileList[0].originFileObj) {
    formData.append("image", fileList[0].originFileObj); // ‚úÖ File ·∫£nh
  }

  console.log("üì° D·ªØ li·ªáu g·ª≠i ƒëi:", formData);

  try {
    const response = await createCoach(formData);
    console.log("‚úÖ API ph·∫£n h·ªìi:", response);
    setModalMessage("‚úÖ G·ª≠i th√†nh c√¥ng!");
    message.success("‚úÖ G·ª≠i th√†nh c√¥ng!");
  } catch (error) {
    console.error("‚ùå L·ªói khi g·ª≠i d·ªØ li·ªáu:", error);
    setModalMessage("‚ùå G·ª≠i kh√¥ng th√†nh c√¥ng!");
    message.error("‚ùå G·ª≠i kh√¥ng th√†nh c√¥ng!");
  } finally {
    setLoading(false);
    setModalVisible(true);
  }
};

  return (
    <div className="p-6 max-w-lg mx-auto bg-white shadow rounded">
      <h2 className="text-xl font-semibold mb-4">Th√™m xe bu√Ωt m·ªõi</h2>

      <Form form={form} layout="vertical" onFinish={onFinish}>
        <Form.Item label="ID Xe Bu√Ωt">
          <Input value={busId || "ƒêang t·∫£i..."} disabled />
        </Form.Item>

        <Form.Item label="T√™n xe bu√Ωt" name="busName" rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p t√™n xe bu√Ωt" }]}>
          <Input />
        </Form.Item>

        <Form.Item label="Bi·ªÉn s·ªë xe" name="licensePlate" rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p bi·ªÉn s·ªë xe" }]}>
          <Input />
        </Form.Item>

        <Form.Item label="Lo·∫°i xe" name="busType" rules={[{ required: true, message: "Vui l√≤ng ch·ªçn lo·∫°i xe" }]}>
          <Select placeholder="Ch·ªçn lo·∫°i xe">
            <Option value="Gi∆∞·ªùng n·∫±m">Gi∆∞·ªùng n·∫±m</Option>
            <Option value="Gh·∫ø ng·ªìi">Gh·∫ø ng·ªìi</Option>
            <Option value="Cao c·∫•p">Cao c·∫•p</Option>
          </Select>
        </Form.Item>

        <Form.Item label="M√¥ t·∫£" name="description">
          <Input.TextArea rows={3} />
        </Form.Item>

        <Form.Item label="·∫¢nh xe bu√Ωt" name="image">
          <Upload
            beforeUpload={() => false}
            fileList={fileList}
            onChange={({ fileList }) => setFileList(fileList as UploadFile[])}
            maxCount={1}
          >
            <Button>Ch·ªçn ·∫£nh</Button>
          </Upload>
        </Form.Item>

        <Form.Item>
          <Button type="primary" htmlType="submit" loading={loading}>T·∫°o xe bu√Ωt</Button>
        </Form.Item>
      </Form>

      {/* Modal hi·ªÉn th·ªã tr·∫°ng th√°i g·ª≠i */}
      <Modal
  title="Tr·∫°ng th√°i g·ª≠i"
  open={modalVisible}
  onOk={() => setModalVisible(false)}
  onCancel={() => setModalVisible(false)}
>
  <p className={modalMessage.startsWith("‚úÖ") ? "text-green-500" : "text-red-500"}>
    {modalMessage}
  </p>
</Modal>

    </div>
  );
};

export { BusCreateCoachPage };
