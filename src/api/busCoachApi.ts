//Frontend\src\api\busCoachApi.ts
/**
 * L·∫•y danh s√°ch t·∫•t c·∫£ xe kh√°ch.
 */
export const fetchCoaches = async () => {
  const token = localStorage.getItem("token");
  const response = await fetch(`${process.env.REACT_APP_API_URL}/useradmin-all-coach`, {
    headers: { Authorization: `Bearer ${token}` }
  });
  if (!response.ok) { throw new Error("Kh√¥ng th·ªÉ t·∫£i danh s√°ch xe kh√°ch ‚ùå"); }
  return await response.json();
};

/**
 * L·∫•y chi ti·∫øt xe kh√°ch theo ID.
 */
export const fetchCoachById = async (id: number) => {
  const token = localStorage.getItem("token");
  const response = await fetch(`${process.env.REACT_APP_API_URL}/useradmin-all-coach/${id}`, {
    headers: { Authorization: `Bearer ${token}` }
  });
  if (!response.ok) { throw new Error("Kh√¥ng th·ªÉ t·∫£i th√¥ng tin xe kh√°ch ‚ùå"); }
  return await response.json();
};

/**
 * T·∫°o xe kh√°ch m·ªõi.
 */
export const createCoach = async (formData: FormData) => {
  const token = localStorage.getItem("token");
  console.log("üì° ƒêang g·ª≠i request API createCoach...", formData);
  console.log("üîí Token g·ª≠i ƒëi:", token);
  const response = await fetch(`${process.env.REACT_APP_API_URL}/api-coach/create-coach`, {
    method: "POST",
    headers: { Authorization: `Bearer ${token}` },
    body: formData,
  });
  console.log("‚úÖ Ph·∫£n h·ªìi t·ª´ API:", response);
  if (!response.ok) { throw new Error("Kh√¥ng th·ªÉ t·∫°o xe kh√°ch ‚ùå"); }
  return await response.json(); // ‚úÖ 
};


/**
 * C·∫≠p nh·∫≠t th√¥ng tin xe kh√°ch.
 */
export const updateCoach = async (id: number, values: any, file?: File) => {
  const token = localStorage.getItem("token");
  const formData = new FormData();
  formData.append("coachName", values.coachName);
  formData.append("licensePlateNumberCoach", values.licensePlateNumberCoach);
  if (file) {
    formData.append("image", file);
  }
  console.log("üì° D·ªØ li·ªáu g·ª≠i API c·∫≠p nh·∫≠t xe kh√°ch:", formData);
  const response = await fetch(`${process.env.REACT_APP_API_URL}/api-coach/update-coach/${id}`, {
    method: "PUT",
    headers: { Authorization: `Bearer ${token}` },
    body: formData,
  });
  /* The line `if (!response.ok) { throw new Error("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t xe kh√°ch "); }` is checking if
  the response from the API call to update a coach is not successful (i.e., the response status is
  not in the range 200-299 which indicates success). If the response is not ok, it throws an error
  with the message "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t xe kh√°ch", indicating that the update coach operation failed.
  This is a way to handle errors and notify the calling code that the update operation was not
  successful. */
  if (!response.ok) { throw new Error("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t xe kh√°ch ‚ùå"); }
  return await response.json();
};

/**
 * X√≥a xe kh√°ch theo ID.
 */
export const deleteCoach = async (id: number) => {
  const token = localStorage.getItem("token");
  const response = await fetch(`${process.env.REACT_APP_API_URL}/api-coach/delete-coach/${id}`, {
    method: "DELETE",
    headers: { Authorization: `Bearer ${token}` }
  });
  if (!response.ok) {  throw new Error("X√≥a xe kh√°ch th·∫•t b·∫°i ‚ùå"); }
};


